package LeetCode;

import java.util.ArrayList;
import java.util.List;

public class longestSubarrayWithMaximumBitwiseAND_2419 {
    public static int longestSubarray(int[] nums) {
        List<ArrayList<Integer>> ls=new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            for (int j = 0; j < nums.length; j++) {
               ArrayList<Integer> lst=new ArrayList<>();
                for (int j2 = i; j2 <=j; j2++) {
                    lst.add(nums[j2]);
                    
                }
                if(!lst.isEmpty()) ls.add(lst);
               
                
            }
            
        }
        int maxBitwiseAnd=0;
        int bitwiseAnd[]=new int[ls.size()];
        int subArrayLen[]=new int[ls.size()];
        int k=0;
        for (ArrayList<Integer> arrayList : ls) {
            int temp=arrayList.get(0);
            subArrayLen[k]=arrayList.size();
            for (int i = 1; i <arrayList.size(); i++) {
                temp&=arrayList.get(i);

                
            }
            bitwiseAnd[k++]=temp;
            maxBitwiseAnd=Math.max(maxBitwiseAnd, temp);
            
        }
        int maxLen=0;
        for (int i = 0; i < subArrayLen.length; i++) {
            if(bitwiseAnd[i]==maxBitwiseAnd){
                maxLen=Math.max(maxLen, subArrayLen[i]);

            }
            
        }
        


       

        return maxLen;
        
    }
    public static void main(String[] args) {
        int arr[]={};
        System.out.println(longestSubarray(arr));;

    }
    
}
